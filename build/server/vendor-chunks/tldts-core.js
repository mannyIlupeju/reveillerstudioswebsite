"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tldts-core";
exports.ids = ["vendor-chunks/tldts-core"];
exports.modules = {

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/index.js":
/*!***************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastPathLookup: () => (/* reexport safe */ _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getEmptyResult: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.getEmptyResult),\n/* harmony export */   parseImpl: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.parseImpl),\n/* harmony export */   resetResult: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.resetResult),\n/* harmony export */   setDefaults: () => (/* reexport safe */ _src_options__WEBPACK_IMPORTED_MODULE_2__.setDefaults)\n/* harmony export */ });\n/* harmony import */ var _src_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/factory */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js\");\n/* harmony import */ var _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/lookup/fast-path */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\");\n/* harmony import */ var _src_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/options */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\");\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3RTtBQUNMO0FBQ3ZCO0FBQzVDIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IHBhcnNlSW1wbCwgZ2V0RW1wdHlSZXN1bHQsIHJlc2V0UmVzdWx0LCB9IGZyb20gJy4vc3JjL2ZhY3RvcnknO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBmYXN0UGF0aExvb2t1cCB9IGZyb20gJy4vc3JjL2xvb2t1cC9mYXN0LXBhdGgnO1xuZXhwb3J0IHsgc2V0RGVmYXVsdHMgfSBmcm9tICcuL3NyYy9vcHRpb25zJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDomainWithoutSuffix)\n/* harmony export */ });\n/**\n * Return the part of domain without suffix.\n *\n * Example: for domain 'foo.com', the result would be 'foo'.\n */\nfunction getDomainWithoutSuffix(domain, suffix) {\n    // Note: here `domain` and `suffix` cannot have the same length because in\n    // this case we set `domain` to `null` instead. It is thus safe to assume\n    // that `suffix` is shorter than `domain`.\n    return domain.slice(0, -suffix.length - 1);\n}\n//# sourceMappingURL=domain-without-suffix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLXdpdGhvdXQtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYW5ueWlsdXBlanUvcmV2ZWlsbGVyc3R1ZGlvcy13ZWJzaXRlL3JldmVpbGxlcnN0dWRpb3Mvbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2RvbWFpbi13aXRob3V0LXN1ZmZpeC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHVybiB0aGUgcGFydCBvZiBkb21haW4gd2l0aG91dCBzdWZmaXguXG4gKlxuICogRXhhbXBsZTogZm9yIGRvbWFpbiAnZm9vLmNvbScsIHRoZSByZXN1bHQgd291bGQgYmUgJ2ZvbycuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldERvbWFpbldpdGhvdXRTdWZmaXgoZG9tYWluLCBzdWZmaXgpIHtcbiAgICAvLyBOb3RlOiBoZXJlIGBkb21haW5gIGFuZCBgc3VmZml4YCBjYW5ub3QgaGF2ZSB0aGUgc2FtZSBsZW5ndGggYmVjYXVzZSBpblxuICAgIC8vIHRoaXMgY2FzZSB3ZSBzZXQgYGRvbWFpbmAgdG8gYG51bGxgIGluc3RlYWQuIEl0IGlzIHRodXMgc2FmZSB0byBhc3N1bWVcbiAgICAvLyB0aGF0IGBzdWZmaXhgIGlzIHNob3J0ZXIgdGhhbiBgZG9tYWluYC5cbiAgICByZXR1cm4gZG9tYWluLnNsaWNlKDAsIC1zdWZmaXgubGVuZ3RoIC0gMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kb21haW4td2l0aG91dC1zdWZmaXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js":
/*!********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDomain)\n/* harmony export */ });\n/**\n * Check if `vhost` is a valid suffix of `hostname` (top-domain)\n *\n * It means that `vhost` needs to be a suffix of `hostname` and we then need to\n * make sure that: either they are equal, or the character preceding `vhost` in\n * `hostname` is a '.' (it should not be a partial label).\n *\n * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok\n * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok\n * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok\n */\nfunction shareSameDomainSuffix(hostname, vhost) {\n    if (hostname.endsWith(vhost)) {\n        return (hostname.length === vhost.length ||\n            hostname[hostname.length - vhost.length - 1] === '.');\n    }\n    return false;\n}\n/**\n * Given a hostname and its public suffix, extract the general domain.\n */\nfunction extractDomainWithSuffix(hostname, publicSuffix) {\n    // Locate the index of the last '.' in the part of the `hostname` preceding\n    // the public suffix.\n    //\n    // examples:\n    //   1. not.evil.co.uk  => evil.co.uk\n    //         ^    ^\n    //         |    | start of public suffix\n    //         | index of the last dot\n    //\n    //   2. example.co.uk   => example.co.uk\n    //     ^       ^\n    //     |       | start of public suffix\n    //     |\n    //     | (-1) no dot found before the public suffix\n    const publicSuffixIndex = hostname.length - publicSuffix.length - 2;\n    const lastDotBeforeSuffixIndex = hostname.lastIndexOf('.', publicSuffixIndex);\n    // No '.' found, then `hostname` is the general domain (no sub-domain)\n    if (lastDotBeforeSuffixIndex === -1) {\n        return hostname;\n    }\n    // Extract the part between the last '.'\n    return hostname.slice(lastDotBeforeSuffixIndex + 1);\n}\n/**\n * Detects the domain based on rules and upon and a host string\n */\nfunction getDomain(suffix, hostname, options) {\n    // Check if `hostname` ends with a member of `validHosts`.\n    if (options.validHosts !== null) {\n        const validHosts = options.validHosts;\n        for (const vhost of validHosts) {\n            if ( /*@__INLINE__*/shareSameDomainSuffix(hostname, vhost)) {\n                return vhost;\n            }\n        }\n    }\n    let numberOfLeadingDots = 0;\n    if (hostname.startsWith('.')) {\n        while (numberOfLeadingDots < hostname.length &&\n            hostname[numberOfLeadingDots] === '.') {\n            numberOfLeadingDots += 1;\n        }\n    }\n    // If `hostname` is a valid public suffix, then there is no domain to return.\n    // Since we already know that `getPublicSuffix` returns a suffix of `hostname`\n    // there is no need to perform a string comparison and we only compare the\n    // size.\n    if (suffix.length === hostname.length - numberOfLeadingDots) {\n        return null;\n    }\n    // To extract the general domain, we start by identifying the public suffix\n    // (if any), then consider the domain to be the public suffix with one added\n    // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:\n    // `co.uk`, then we take one more level: `evil`, giving the final result:\n    // `evil.co.uk`).\n    return /*@__INLINE__*/ extractDomainWithSuffix(hostname, suffix);\n}\n//# sourceMappingURL=domain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9kb21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiBgdmhvc3RgIGlzIGEgdmFsaWQgc3VmZml4IG9mIGBob3N0bmFtZWAgKHRvcC1kb21haW4pXG4gKlxuICogSXQgbWVhbnMgdGhhdCBgdmhvc3RgIG5lZWRzIHRvIGJlIGEgc3VmZml4IG9mIGBob3N0bmFtZWAgYW5kIHdlIHRoZW4gbmVlZCB0b1xuICogbWFrZSBzdXJlIHRoYXQ6IGVpdGhlciB0aGV5IGFyZSBlcXVhbCwgb3IgdGhlIGNoYXJhY3RlciBwcmVjZWRpbmcgYHZob3N0YCBpblxuICogYGhvc3RuYW1lYCBpcyBhICcuJyAoaXQgc2hvdWxkIG5vdCBiZSBhIHBhcnRpYWwgbGFiZWwpLlxuICpcbiAqICogaG9zdG5hbWUgPSAnbm90LmV2aWwuY29tJyBhbmQgdmhvc3QgPSAndmlsLmNvbScgICAgICA9PiBub3Qgb2tcbiAqICogaG9zdG5hbWUgPSAnbm90LmV2aWwuY29tJyBhbmQgdmhvc3QgPSAnZXZpbC5jb20nICAgICA9PiBva1xuICogKiBob3N0bmFtZSA9ICdub3QuZXZpbC5jb20nIGFuZCB2aG9zdCA9ICdub3QuZXZpbC5jb20nID0+IG9rXG4gKi9cbmZ1bmN0aW9uIHNoYXJlU2FtZURvbWFpblN1ZmZpeChob3N0bmFtZSwgdmhvc3QpIHtcbiAgICBpZiAoaG9zdG5hbWUuZW5kc1dpdGgodmhvc3QpKSB7XG4gICAgICAgIHJldHVybiAoaG9zdG5hbWUubGVuZ3RoID09PSB2aG9zdC5sZW5ndGggfHxcbiAgICAgICAgICAgIGhvc3RuYW1lW2hvc3RuYW1lLmxlbmd0aCAtIHZob3N0Lmxlbmd0aCAtIDFdID09PSAnLicpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEdpdmVuIGEgaG9zdG5hbWUgYW5kIGl0cyBwdWJsaWMgc3VmZml4LCBleHRyYWN0IHRoZSBnZW5lcmFsIGRvbWFpbi5cbiAqL1xuZnVuY3Rpb24gZXh0cmFjdERvbWFpbldpdGhTdWZmaXgoaG9zdG5hbWUsIHB1YmxpY1N1ZmZpeCkge1xuICAgIC8vIExvY2F0ZSB0aGUgaW5kZXggb2YgdGhlIGxhc3QgJy4nIGluIHRoZSBwYXJ0IG9mIHRoZSBgaG9zdG5hbWVgIHByZWNlZGluZ1xuICAgIC8vIHRoZSBwdWJsaWMgc3VmZml4LlxuICAgIC8vXG4gICAgLy8gZXhhbXBsZXM6XG4gICAgLy8gICAxLiBub3QuZXZpbC5jby51ayAgPT4gZXZpbC5jby51a1xuICAgIC8vICAgICAgICAgXiAgICBeXG4gICAgLy8gICAgICAgICB8ICAgIHwgc3RhcnQgb2YgcHVibGljIHN1ZmZpeFxuICAgIC8vICAgICAgICAgfCBpbmRleCBvZiB0aGUgbGFzdCBkb3RcbiAgICAvL1xuICAgIC8vICAgMi4gZXhhbXBsZS5jby51ayAgID0+IGV4YW1wbGUuY28udWtcbiAgICAvLyAgICAgXiAgICAgICBeXG4gICAgLy8gICAgIHwgICAgICAgfCBzdGFydCBvZiBwdWJsaWMgc3VmZml4XG4gICAgLy8gICAgIHxcbiAgICAvLyAgICAgfCAoLTEpIG5vIGRvdCBmb3VuZCBiZWZvcmUgdGhlIHB1YmxpYyBzdWZmaXhcbiAgICBjb25zdCBwdWJsaWNTdWZmaXhJbmRleCA9IGhvc3RuYW1lLmxlbmd0aCAtIHB1YmxpY1N1ZmZpeC5sZW5ndGggLSAyO1xuICAgIGNvbnN0IGxhc3REb3RCZWZvcmVTdWZmaXhJbmRleCA9IGhvc3RuYW1lLmxhc3RJbmRleE9mKCcuJywgcHVibGljU3VmZml4SW5kZXgpO1xuICAgIC8vIE5vICcuJyBmb3VuZCwgdGhlbiBgaG9zdG5hbWVgIGlzIHRoZSBnZW5lcmFsIGRvbWFpbiAobm8gc3ViLWRvbWFpbilcbiAgICBpZiAobGFzdERvdEJlZm9yZVN1ZmZpeEluZGV4ID09PSAtMSkge1xuICAgICAgICByZXR1cm4gaG9zdG5hbWU7XG4gICAgfVxuICAgIC8vIEV4dHJhY3QgdGhlIHBhcnQgYmV0d2VlbiB0aGUgbGFzdCAnLidcbiAgICByZXR1cm4gaG9zdG5hbWUuc2xpY2UobGFzdERvdEJlZm9yZVN1ZmZpeEluZGV4ICsgMSk7XG59XG4vKipcbiAqIERldGVjdHMgdGhlIGRvbWFpbiBiYXNlZCBvbiBydWxlcyBhbmQgdXBvbiBhbmQgYSBob3N0IHN0cmluZ1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb21haW4oc3VmZml4LCBob3N0bmFtZSwgb3B0aW9ucykge1xuICAgIC8vIENoZWNrIGlmIGBob3N0bmFtZWAgZW5kcyB3aXRoIGEgbWVtYmVyIG9mIGB2YWxpZEhvc3RzYC5cbiAgICBpZiAob3B0aW9ucy52YWxpZEhvc3RzICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHZhbGlkSG9zdHMgPSBvcHRpb25zLnZhbGlkSG9zdHM7XG4gICAgICAgIGZvciAoY29uc3Qgdmhvc3Qgb2YgdmFsaWRIb3N0cykge1xuICAgICAgICAgICAgaWYgKCAvKkBfX0lOTElORV9fKi9zaGFyZVNhbWVEb21haW5TdWZmaXgoaG9zdG5hbWUsIHZob3N0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB2aG9zdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgbnVtYmVyT2ZMZWFkaW5nRG90cyA9IDA7XG4gICAgaWYgKGhvc3RuYW1lLnN0YXJ0c1dpdGgoJy4nKSkge1xuICAgICAgICB3aGlsZSAobnVtYmVyT2ZMZWFkaW5nRG90cyA8IGhvc3RuYW1lLmxlbmd0aCAmJlxuICAgICAgICAgICAgaG9zdG5hbWVbbnVtYmVyT2ZMZWFkaW5nRG90c10gPT09ICcuJykge1xuICAgICAgICAgICAgbnVtYmVyT2ZMZWFkaW5nRG90cyArPSAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIElmIGBob3N0bmFtZWAgaXMgYSB2YWxpZCBwdWJsaWMgc3VmZml4LCB0aGVuIHRoZXJlIGlzIG5vIGRvbWFpbiB0byByZXR1cm4uXG4gICAgLy8gU2luY2Ugd2UgYWxyZWFkeSBrbm93IHRoYXQgYGdldFB1YmxpY1N1ZmZpeGAgcmV0dXJucyBhIHN1ZmZpeCBvZiBgaG9zdG5hbWVgXG4gICAgLy8gdGhlcmUgaXMgbm8gbmVlZCB0byBwZXJmb3JtIGEgc3RyaW5nIGNvbXBhcmlzb24gYW5kIHdlIG9ubHkgY29tcGFyZSB0aGVcbiAgICAvLyBzaXplLlxuICAgIGlmIChzdWZmaXgubGVuZ3RoID09PSBob3N0bmFtZS5sZW5ndGggLSBudW1iZXJPZkxlYWRpbmdEb3RzKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBUbyBleHRyYWN0IHRoZSBnZW5lcmFsIGRvbWFpbiwgd2Ugc3RhcnQgYnkgaWRlbnRpZnlpbmcgdGhlIHB1YmxpYyBzdWZmaXhcbiAgICAvLyAoaWYgYW55KSwgdGhlbiBjb25zaWRlciB0aGUgZG9tYWluIHRvIGJlIHRoZSBwdWJsaWMgc3VmZml4IHdpdGggb25lIGFkZGVkXG4gICAgLy8gbGV2ZWwgb2YgZGVwdGguIChlLmcuOiBpZiBob3N0bmFtZSBpcyBgbm90LmV2aWwuY28udWtgIGFuZCBwdWJsaWMgc3VmZml4OlxuICAgIC8vIGBjby51a2AsIHRoZW4gd2UgdGFrZSBvbmUgbW9yZSBsZXZlbDogYGV2aWxgLCBnaXZpbmcgdGhlIGZpbmFsIHJlc3VsdDpcbiAgICAvLyBgZXZpbC5jby51a2ApLlxuICAgIHJldHVybiAvKkBfX0lOTElORV9fKi8gZXh0cmFjdERvbWFpbldpdGhTdWZmaXgoaG9zdG5hbWUsIHN1ZmZpeCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kb21haW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/extract-hostname.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ extractHostname)\n/* harmony export */ });\n/**\n * @param url - URL we want to extract a hostname from.\n * @param urlIsValidHostname - hint from caller; true if `url` is already a valid hostname.\n */\nfunction extractHostname(url, urlIsValidHostname) {\n    let start = 0;\n    let end = url.length;\n    let hasUpper = false;\n    // If url is not already a valid hostname, then try to extract hostname.\n    if (!urlIsValidHostname) {\n        // Special handling of data URLs\n        if (url.startsWith('data:')) {\n            return null;\n        }\n        // Trim leading spaces\n        while (start < url.length && url.charCodeAt(start) <= 32) {\n            start += 1;\n        }\n        // Trim trailing spaces\n        while (end > start + 1 && url.charCodeAt(end - 1) <= 32) {\n            end -= 1;\n        }\n        // Skip scheme.\n        if (url.charCodeAt(start) === 47 /* '/' */ &&\n            url.charCodeAt(start + 1) === 47 /* '/' */) {\n            start += 2;\n        }\n        else {\n            const indexOfProtocol = url.indexOf(':/', start);\n            if (indexOfProtocol !== -1) {\n                // Implement fast-path for common protocols. We expect most protocols\n                // should be one of these 4 and thus we will not need to perform the\n                // more expansive validity check most of the time.\n                const protocolSize = indexOfProtocol - start;\n                const c0 = url.charCodeAt(start);\n                const c1 = url.charCodeAt(start + 1);\n                const c2 = url.charCodeAt(start + 2);\n                const c3 = url.charCodeAt(start + 3);\n                const c4 = url.charCodeAt(start + 4);\n                if (protocolSize === 5 &&\n                    c0 === 104 /* 'h' */ &&\n                    c1 === 116 /* 't' */ &&\n                    c2 === 116 /* 't' */ &&\n                    c3 === 112 /* 'p' */ &&\n                    c4 === 115 /* 's' */) {\n                    // https\n                }\n                else if (protocolSize === 4 &&\n                    c0 === 104 /* 'h' */ &&\n                    c1 === 116 /* 't' */ &&\n                    c2 === 116 /* 't' */ &&\n                    c3 === 112 /* 'p' */) {\n                    // http\n                }\n                else if (protocolSize === 3 &&\n                    c0 === 119 /* 'w' */ &&\n                    c1 === 115 /* 's' */ &&\n                    c2 === 115 /* 's' */) {\n                    // wss\n                }\n                else if (protocolSize === 2 &&\n                    c0 === 119 /* 'w' */ &&\n                    c1 === 115 /* 's' */) {\n                    // ws\n                }\n                else {\n                    // Check that scheme is valid\n                    for (let i = start; i < indexOfProtocol; i += 1) {\n                        const lowerCaseCode = url.charCodeAt(i) | 32;\n                        if (!(((lowerCaseCode >= 97 && lowerCaseCode <= 122) || // [a, z]\n                            (lowerCaseCode >= 48 && lowerCaseCode <= 57) || // [0, 9]\n                            lowerCaseCode === 46 || // '.'\n                            lowerCaseCode === 45 || // '-'\n                            lowerCaseCode === 43) // '+'\n                        )) {\n                            return null;\n                        }\n                    }\n                }\n                // Skip 0, 1 or more '/' after ':/'\n                start = indexOfProtocol + 2;\n                while (url.charCodeAt(start) === 47 /* '/' */) {\n                    start += 1;\n                }\n            }\n        }\n        // Detect first occurrence of '/', '?' or '#'. We also keep track of the\n        // last occurrence of '@', ']' or ':' to speed-up subsequent parsing of\n        // (respectively), identifier, ipv6 or port.\n        let indexOfIdentifier = -1;\n        let indexOfClosingBracket = -1;\n        let indexOfPort = -1;\n        for (let i = start; i < end; i += 1) {\n            const code = url.charCodeAt(i);\n            if (code === 35 || // '#'\n                code === 47 || // '/'\n                code === 63 // '?'\n            ) {\n                end = i;\n                break;\n            }\n            else if (code === 64) {\n                // '@'\n                indexOfIdentifier = i;\n            }\n            else if (code === 93) {\n                // ']'\n                indexOfClosingBracket = i;\n            }\n            else if (code === 58) {\n                // ':'\n                indexOfPort = i;\n            }\n            else if (code >= 65 && code <= 90) {\n                hasUpper = true;\n            }\n        }\n        // Detect identifier: '@'\n        if (indexOfIdentifier !== -1 &&\n            indexOfIdentifier > start &&\n            indexOfIdentifier < end) {\n            start = indexOfIdentifier + 1;\n        }\n        // Handle ipv6 addresses\n        if (url.charCodeAt(start) === 91 /* '[' */) {\n            if (indexOfClosingBracket !== -1) {\n                return url.slice(start + 1, indexOfClosingBracket).toLowerCase();\n            }\n            return null;\n        }\n        else if (indexOfPort !== -1 && indexOfPort > start && indexOfPort < end) {\n            // Detect port: ':'\n            end = indexOfPort;\n        }\n    }\n    // Trim trailing dots\n    while (end > start + 1 && url.charCodeAt(end - 1) === 46 /* '.' */) {\n        end -= 1;\n    }\n    const hostname = start !== 0 || end !== url.length ? url.slice(start, end) : url;\n    if (hasUpper) {\n        return hostname.toLowerCase();\n    }\n    return hostname;\n}\n//# sourceMappingURL=extract-hostname.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/factory.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmptyResult: () => (/* binding */ getEmptyResult),\n/* harmony export */   parseImpl: () => (/* binding */ parseImpl),\n/* harmony export */   resetResult: () => (/* binding */ resetResult)\n/* harmony export */ });\n/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domain */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js\");\n/* harmony import */ var _domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domain-without-suffix */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\");\n/* harmony import */ var _extract_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extract-hostname */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\");\n/* harmony import */ var _is_ip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-ip */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js\");\n/* harmony import */ var _is_valid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is-valid */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./options */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\");\n/* harmony import */ var _subdomain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./subdomain */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js\");\n/**\n * Implement a factory allowing to plug different implementations of suffix\n * lookup (e.g.: using a trie or the packed hashes datastructures). This is used\n * and exposed in `tldts.ts` and `tldts-experimental.ts` bundle entrypoints.\n */\n\n\n\n\n\n\n\nfunction getEmptyResult() {\n    return {\n        domain: null,\n        domainWithoutSuffix: null,\n        hostname: null,\n        isIcann: null,\n        isIp: null,\n        isPrivate: null,\n        publicSuffix: null,\n        subdomain: null,\n    };\n}\nfunction resetResult(result) {\n    result.domain = null;\n    result.domainWithoutSuffix = null;\n    result.hostname = null;\n    result.isIcann = null;\n    result.isIp = null;\n    result.isPrivate = null;\n    result.publicSuffix = null;\n    result.subdomain = null;\n}\nfunction parseImpl(url, step, suffixLookup, partialOptions, result) {\n    const options = /*@__INLINE__*/ (0,_options__WEBPACK_IMPORTED_MODULE_5__.setDefaults)(partialOptions);\n    // Very fast approximate check to make sure `url` is a string. This is needed\n    // because the library will not necessarily be used in a typed setup and\n    // values of arbitrary types might be given as argument.\n    if (typeof url !== 'string') {\n        return result;\n    }\n    // Extract hostname from `url` only if needed. This can be made optional\n    // using `options.extractHostname`. This option will typically be used\n    // whenever we are sure the inputs to `parse` are already hostnames and not\n    // arbitrary URLs.\n    //\n    // `mixedInput` allows to specify if we expect a mix of URLs and hostnames\n    // as input. If only hostnames are expected then `extractHostname` can be\n    // set to `false` to speed-up parsing. If only URLs are expected then\n    // `mixedInputs` can be set to `false`. The `mixedInputs` is only a hint\n    // and will not change the behavior of the library.\n    if (!options.extractHostname) {\n        result.hostname = url;\n    }\n    else if (options.mixedInputs) {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, (0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(url));\n    }\n    else {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, false);\n    }\n    if (step === 0 /* FLAG.HOSTNAME */ || result.hostname === null) {\n        return result;\n    }\n    // Check if `hostname` is a valid ip address\n    if (options.detectIp) {\n        result.isIp = (0,_is_ip__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(result.hostname);\n        if (result.isIp) {\n            return result;\n        }\n    }\n    // Perform optional hostname validation. If hostname is not valid, no need to\n    // go further as there will be no valid domain or sub-domain.\n    if (options.validateHostname &&\n        options.extractHostname &&\n        !(0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(result.hostname)) {\n        result.hostname = null;\n        return result;\n    }\n    // Extract public suffix\n    suffixLookup(result.hostname, options, result);\n    if (step === 2 /* FLAG.PUBLIC_SUFFIX */ || result.publicSuffix === null) {\n        return result;\n    }\n    // Extract domain\n    result.domain = (0,_domain__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(result.publicSuffix, result.hostname, options);\n    if (step === 3 /* FLAG.DOMAIN */ || result.domain === null) {\n        return result;\n    }\n    // Extract subdomain\n    result.subdomain = (0,_subdomain__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(result.hostname, result.domain);\n    if (step === 4 /* FLAG.SUB_DOMAIN */) {\n        return result;\n    }\n    // Extract domain without suffix\n    result.domainWithoutSuffix = (0,_domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(result.domain, result.publicSuffix);\n    return result;\n}\n//# sourceMappingURL=factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpQztBQUM0QjtBQUNaO0FBQ3RCO0FBQ2M7QUFDRDtBQUNEO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQ0FBb0MscURBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw2REFBZSxNQUFNLHFEQUFlO0FBQzlEO0FBQ0E7QUFDQSwwQkFBMEIsNkRBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFJO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFEQUFlO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBWTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxrRUFBc0I7QUFDdkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9mYWN0b3J5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW1wbGVtZW50IGEgZmFjdG9yeSBhbGxvd2luZyB0byBwbHVnIGRpZmZlcmVudCBpbXBsZW1lbnRhdGlvbnMgb2Ygc3VmZml4XG4gKiBsb29rdXAgKGUuZy46IHVzaW5nIGEgdHJpZSBvciB0aGUgcGFja2VkIGhhc2hlcyBkYXRhc3RydWN0dXJlcykuIFRoaXMgaXMgdXNlZFxuICogYW5kIGV4cG9zZWQgaW4gYHRsZHRzLnRzYCBhbmQgYHRsZHRzLWV4cGVyaW1lbnRhbC50c2AgYnVuZGxlIGVudHJ5cG9pbnRzLlxuICovXG5pbXBvcnQgZ2V0RG9tYWluIGZyb20gJy4vZG9tYWluJztcbmltcG9ydCBnZXREb21haW5XaXRob3V0U3VmZml4IGZyb20gJy4vZG9tYWluLXdpdGhvdXQtc3VmZml4JztcbmltcG9ydCBleHRyYWN0SG9zdG5hbWUgZnJvbSAnLi9leHRyYWN0LWhvc3RuYW1lJztcbmltcG9ydCBpc0lwIGZyb20gJy4vaXMtaXAnO1xuaW1wb3J0IGlzVmFsaWRIb3N0bmFtZSBmcm9tICcuL2lzLXZhbGlkJztcbmltcG9ydCB7IHNldERlZmF1bHRzIH0gZnJvbSAnLi9vcHRpb25zJztcbmltcG9ydCBnZXRTdWJkb21haW4gZnJvbSAnLi9zdWJkb21haW4nO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVtcHR5UmVzdWx0KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGRvbWFpbjogbnVsbCxcbiAgICAgICAgZG9tYWluV2l0aG91dFN1ZmZpeDogbnVsbCxcbiAgICAgICAgaG9zdG5hbWU6IG51bGwsXG4gICAgICAgIGlzSWNhbm46IG51bGwsXG4gICAgICAgIGlzSXA6IG51bGwsXG4gICAgICAgIGlzUHJpdmF0ZTogbnVsbCxcbiAgICAgICAgcHVibGljU3VmZml4OiBudWxsLFxuICAgICAgICBzdWJkb21haW46IG51bGwsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNldFJlc3VsdChyZXN1bHQpIHtcbiAgICByZXN1bHQuZG9tYWluID0gbnVsbDtcbiAgICByZXN1bHQuZG9tYWluV2l0aG91dFN1ZmZpeCA9IG51bGw7XG4gICAgcmVzdWx0Lmhvc3RuYW1lID0gbnVsbDtcbiAgICByZXN1bHQuaXNJY2FubiA9IG51bGw7XG4gICAgcmVzdWx0LmlzSXAgPSBudWxsO1xuICAgIHJlc3VsdC5pc1ByaXZhdGUgPSBudWxsO1xuICAgIHJlc3VsdC5wdWJsaWNTdWZmaXggPSBudWxsO1xuICAgIHJlc3VsdC5zdWJkb21haW4gPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW1wbCh1cmwsIHN0ZXAsIHN1ZmZpeExvb2t1cCwgcGFydGlhbE9wdGlvbnMsIHJlc3VsdCkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSAvKkBfX0lOTElORV9fKi8gc2V0RGVmYXVsdHMocGFydGlhbE9wdGlvbnMpO1xuICAgIC8vIFZlcnkgZmFzdCBhcHByb3hpbWF0ZSBjaGVjayB0byBtYWtlIHN1cmUgYHVybGAgaXMgYSBzdHJpbmcuIFRoaXMgaXMgbmVlZGVkXG4gICAgLy8gYmVjYXVzZSB0aGUgbGlicmFyeSB3aWxsIG5vdCBuZWNlc3NhcmlseSBiZSB1c2VkIGluIGEgdHlwZWQgc2V0dXAgYW5kXG4gICAgLy8gdmFsdWVzIG9mIGFyYml0cmFyeSB0eXBlcyBtaWdodCBiZSBnaXZlbiBhcyBhcmd1bWVudC5cbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCBob3N0bmFtZSBmcm9tIGB1cmxgIG9ubHkgaWYgbmVlZGVkLiBUaGlzIGNhbiBiZSBtYWRlIG9wdGlvbmFsXG4gICAgLy8gdXNpbmcgYG9wdGlvbnMuZXh0cmFjdEhvc3RuYW1lYC4gVGhpcyBvcHRpb24gd2lsbCB0eXBpY2FsbHkgYmUgdXNlZFxuICAgIC8vIHdoZW5ldmVyIHdlIGFyZSBzdXJlIHRoZSBpbnB1dHMgdG8gYHBhcnNlYCBhcmUgYWxyZWFkeSBob3N0bmFtZXMgYW5kIG5vdFxuICAgIC8vIGFyYml0cmFyeSBVUkxzLlxuICAgIC8vXG4gICAgLy8gYG1peGVkSW5wdXRgIGFsbG93cyB0byBzcGVjaWZ5IGlmIHdlIGV4cGVjdCBhIG1peCBvZiBVUkxzIGFuZCBob3N0bmFtZXNcbiAgICAvLyBhcyBpbnB1dC4gSWYgb25seSBob3N0bmFtZXMgYXJlIGV4cGVjdGVkIHRoZW4gYGV4dHJhY3RIb3N0bmFtZWAgY2FuIGJlXG4gICAgLy8gc2V0IHRvIGBmYWxzZWAgdG8gc3BlZWQtdXAgcGFyc2luZy4gSWYgb25seSBVUkxzIGFyZSBleHBlY3RlZCB0aGVuXG4gICAgLy8gYG1peGVkSW5wdXRzYCBjYW4gYmUgc2V0IHRvIGBmYWxzZWAuIFRoZSBgbWl4ZWRJbnB1dHNgIGlzIG9ubHkgYSBoaW50XG4gICAgLy8gYW5kIHdpbGwgbm90IGNoYW5nZSB0aGUgYmVoYXZpb3Igb2YgdGhlIGxpYnJhcnkuXG4gICAgaWYgKCFvcHRpb25zLmV4dHJhY3RIb3N0bmFtZSkge1xuICAgICAgICByZXN1bHQuaG9zdG5hbWUgPSB1cmw7XG4gICAgfVxuICAgIGVsc2UgaWYgKG9wdGlvbnMubWl4ZWRJbnB1dHMpIHtcbiAgICAgICAgcmVzdWx0Lmhvc3RuYW1lID0gZXh0cmFjdEhvc3RuYW1lKHVybCwgaXNWYWxpZEhvc3RuYW1lKHVybCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzdWx0Lmhvc3RuYW1lID0gZXh0cmFjdEhvc3RuYW1lKHVybCwgZmFsc2UpO1xuICAgIH1cbiAgICBpZiAoc3RlcCA9PT0gMCAvKiBGTEFHLkhPU1ROQU1FICovIHx8IHJlc3VsdC5ob3N0bmFtZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBDaGVjayBpZiBgaG9zdG5hbWVgIGlzIGEgdmFsaWQgaXAgYWRkcmVzc1xuICAgIGlmIChvcHRpb25zLmRldGVjdElwKSB7XG4gICAgICAgIHJlc3VsdC5pc0lwID0gaXNJcChyZXN1bHQuaG9zdG5hbWUpO1xuICAgICAgICBpZiAocmVzdWx0LmlzSXApIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gUGVyZm9ybSBvcHRpb25hbCBob3N0bmFtZSB2YWxpZGF0aW9uLiBJZiBob3N0bmFtZSBpcyBub3QgdmFsaWQsIG5vIG5lZWQgdG9cbiAgICAvLyBnbyBmdXJ0aGVyIGFzIHRoZXJlIHdpbGwgYmUgbm8gdmFsaWQgZG9tYWluIG9yIHN1Yi1kb21haW4uXG4gICAgaWYgKG9wdGlvbnMudmFsaWRhdGVIb3N0bmFtZSAmJlxuICAgICAgICBvcHRpb25zLmV4dHJhY3RIb3N0bmFtZSAmJlxuICAgICAgICAhaXNWYWxpZEhvc3RuYW1lKHJlc3VsdC5ob3N0bmFtZSkpIHtcbiAgICAgICAgcmVzdWx0Lmhvc3RuYW1lID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCBwdWJsaWMgc3VmZml4XG4gICAgc3VmZml4TG9va3VwKHJlc3VsdC5ob3N0bmFtZSwgb3B0aW9ucywgcmVzdWx0KTtcbiAgICBpZiAoc3RlcCA9PT0gMiAvKiBGTEFHLlBVQkxJQ19TVUZGSVggKi8gfHwgcmVzdWx0LnB1YmxpY1N1ZmZpeCA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBFeHRyYWN0IGRvbWFpblxuICAgIHJlc3VsdC5kb21haW4gPSBnZXREb21haW4ocmVzdWx0LnB1YmxpY1N1ZmZpeCwgcmVzdWx0Lmhvc3RuYW1lLCBvcHRpb25zKTtcbiAgICBpZiAoc3RlcCA9PT0gMyAvKiBGTEFHLkRPTUFJTiAqLyB8fCByZXN1bHQuZG9tYWluID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIEV4dHJhY3Qgc3ViZG9tYWluXG4gICAgcmVzdWx0LnN1YmRvbWFpbiA9IGdldFN1YmRvbWFpbihyZXN1bHQuaG9zdG5hbWUsIHJlc3VsdC5kb21haW4pO1xuICAgIGlmIChzdGVwID09PSA0IC8qIEZMQUcuU1VCX0RPTUFJTiAqLykge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBFeHRyYWN0IGRvbWFpbiB3aXRob3V0IHN1ZmZpeFxuICAgIHJlc3VsdC5kb21haW5XaXRob3V0U3VmZml4ID0gZ2V0RG9tYWluV2l0aG91dFN1ZmZpeChyZXN1bHQuZG9tYWluLCByZXN1bHQucHVibGljU3VmZml4KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmFjdG9yeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js":
/*!*******************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-ip.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIp)\n/* harmony export */ });\n/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n */\nfunction isProbablyIpv4(hostname) {\n    // Cannot be shorted than 1.1.1.1\n    if (hostname.length < 7) {\n        return false;\n    }\n    // Cannot be longer than: 255.255.255.255\n    if (hostname.length > 15) {\n        return false;\n    }\n    let numberOfDots = 0;\n    for (let i = 0; i < hostname.length; i += 1) {\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */) {\n            numberOfDots += 1;\n        }\n        else if (code < 48 /* '0' */ || code > 57 /* '9' */) {\n            return false;\n        }\n    }\n    return (numberOfDots === 3 &&\n        hostname.charCodeAt(0) !== 46 /* '.' */ &&\n        hostname.charCodeAt(hostname.length - 1) !== 46 /* '.' */);\n}\n/**\n * Similar to isProbablyIpv4.\n */\nfunction isProbablyIpv6(hostname) {\n    if (hostname.length < 3) {\n        return false;\n    }\n    let start = hostname.startsWith('[') ? 1 : 0;\n    let end = hostname.length;\n    if (hostname[end - 1] === ']') {\n        end -= 1;\n    }\n    // We only consider the maximum size of a normal IPV6. Note that this will\n    // fail on so-called \"IPv4 mapped IPv6 addresses\" but this is a corner-case\n    // and a proper validation library should be used for these.\n    if (end - start > 39) {\n        return false;\n    }\n    let hasColon = false;\n    for (; start < end; start += 1) {\n        const code = hostname.charCodeAt(start);\n        if (code === 58 /* ':' */) {\n            hasColon = true;\n        }\n        else if (!(((code >= 48 && code <= 57) || // 0-9\n            (code >= 97 && code <= 102) || // a-f\n            (code >= 65 && code <= 90)) // A-F\n        )) {\n            return false;\n        }\n    }\n    return hasColon;\n}\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n */\nfunction isIp(hostname) {\n    return isProbablyIpv6(hostname) || isProbablyIpv4(hostname);\n}\n//# sourceMappingURL=is-ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtaXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9pcy1pcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIGEgaG9zdG5hbWUgaXMgYW4gSVAuIFlvdSBzaG91bGQgYmUgYXdhcmUgdGhhdCB0aGlzIG9ubHkgd29ya3NcbiAqIGJlY2F1c2UgYGhvc3RuYW1lYCBpcyBhbHJlYWR5IGdhcmFudGVlZCB0byBiZSBhIHZhbGlkIGhvc3RuYW1lIVxuICovXG5mdW5jdGlvbiBpc1Byb2JhYmx5SXB2NChob3N0bmFtZSkge1xuICAgIC8vIENhbm5vdCBiZSBzaG9ydGVkIHRoYW4gMS4xLjEuMVxuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPCA3KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gQ2Fubm90IGJlIGxvbmdlciB0aGFuOiAyNTUuMjU1LjI1NS4yNTVcbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoID4gMTUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgbnVtYmVyT2ZEb3RzID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhvc3RuYW1lLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGkpO1xuICAgICAgICBpZiAoY29kZSA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBudW1iZXJPZkRvdHMgKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb2RlIDwgNDggLyogJzAnICovIHx8IGNvZGUgPiA1NyAvKiAnOScgKi8pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKG51bWJlck9mRG90cyA9PT0gMyAmJlxuICAgICAgICBob3N0bmFtZS5jaGFyQ29kZUF0KDApICE9PSA0NiAvKiAnLicgKi8gJiZcbiAgICAgICAgaG9zdG5hbWUuY2hhckNvZGVBdChob3N0bmFtZS5sZW5ndGggLSAxKSAhPT0gNDYgLyogJy4nICovKTtcbn1cbi8qKlxuICogU2ltaWxhciB0byBpc1Byb2JhYmx5SXB2NC5cbiAqL1xuZnVuY3Rpb24gaXNQcm9iYWJseUlwdjYoaG9zdG5hbWUpIHtcbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoIDwgMykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBzdGFydCA9IGhvc3RuYW1lLnN0YXJ0c1dpdGgoJ1snKSA/IDEgOiAwO1xuICAgIGxldCBlbmQgPSBob3N0bmFtZS5sZW5ndGg7XG4gICAgaWYgKGhvc3RuYW1lW2VuZCAtIDFdID09PSAnXScpIHtcbiAgICAgICAgZW5kIC09IDE7XG4gICAgfVxuICAgIC8vIFdlIG9ubHkgY29uc2lkZXIgdGhlIG1heGltdW0gc2l6ZSBvZiBhIG5vcm1hbCBJUFY2LiBOb3RlIHRoYXQgdGhpcyB3aWxsXG4gICAgLy8gZmFpbCBvbiBzby1jYWxsZWQgXCJJUHY0IG1hcHBlZCBJUHY2IGFkZHJlc3Nlc1wiIGJ1dCB0aGlzIGlzIGEgY29ybmVyLWNhc2VcbiAgICAvLyBhbmQgYSBwcm9wZXIgdmFsaWRhdGlvbiBsaWJyYXJ5IHNob3VsZCBiZSB1c2VkIGZvciB0aGVzZS5cbiAgICBpZiAoZW5kIC0gc3RhcnQgPiAzOSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBoYXNDb2xvbiA9IGZhbHNlO1xuICAgIGZvciAoOyBzdGFydCA8IGVuZDsgc3RhcnQgKz0gMSkge1xuICAgICAgICBjb25zdCBjb2RlID0gaG9zdG5hbWUuY2hhckNvZGVBdChzdGFydCk7XG4gICAgICAgIGlmIChjb2RlID09PSA1OCAvKiAnOicgKi8pIHtcbiAgICAgICAgICAgIGhhc0NvbG9uID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghKCgoY29kZSA+PSA0OCAmJiBjb2RlIDw9IDU3KSB8fCAvLyAwLTlcbiAgICAgICAgICAgIChjb2RlID49IDk3ICYmIGNvZGUgPD0gMTAyKSB8fCAvLyBhLWZcbiAgICAgICAgICAgIChjb2RlID49IDY1ICYmIGNvZGUgPD0gOTApKSAvLyBBLUZcbiAgICAgICAgKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoYXNDb2xvbjtcbn1cbi8qKlxuICogQ2hlY2sgaWYgYGhvc3RuYW1lYCBpcyAqcHJvYmFibHkqIGEgdmFsaWQgaXAgYWRkciAoZWl0aGVyIGlwdjYgb3IgaXB2NCkuXG4gKiBUaGlzICp3aWxsIG5vdCogd29yayBvbiBhbnkgc3RyaW5nLiBXZSBuZWVkIGBob3N0bmFtZWAgdG8gYmUgYSB2YWxpZFxuICogaG9zdG5hbWUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzSXAoaG9zdG5hbWUpIHtcbiAgICByZXR1cm4gaXNQcm9iYWJseUlwdjYoaG9zdG5hbWUpIHx8IGlzUHJvYmFibHlJcHY0KGhvc3RuYW1lKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWlwLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js":
/*!**********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-valid.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Implements fast shallow verification of hostnames. This does not perform a\n * struct check on the content of labels (classes of Unicode characters, etc.)\n * but instead check that the structure is valid (number of labels, length of\n * labels, etc.).\n *\n * If you need stricter validation, consider using an external library.\n */\nfunction isValidAscii(code) {\n    return ((code >= 97 && code <= 122) || (code >= 48 && code <= 57) || code > 127);\n}\n/**\n * Check if a hostname string is valid. It's usually a preliminary check before\n * trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n */\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname) {\n    if (hostname.length > 255) {\n        return false;\n    }\n    if (hostname.length === 0) {\n        return false;\n    }\n    if (\n    /*@__INLINE__*/ !isValidAscii(hostname.charCodeAt(0)) &&\n        hostname.charCodeAt(0) !== 46 && // '.' (dot)\n        hostname.charCodeAt(0) !== 95 // '_' (underscore)\n    ) {\n        return false;\n    }\n    // Validate hostname according to RFC\n    let lastDotIndex = -1;\n    let lastCharCode = -1;\n    const len = hostname.length;\n    for (let i = 0; i < len; i += 1) {\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */) {\n            if (\n            // Check that previous label is < 63 bytes long (64 = 63 + '.')\n            i - lastDotIndex > 64 ||\n                // Check that previous character was not already a '.'\n                lastCharCode === 46 ||\n                // Check that the previous label does not end with a '-' (dash)\n                lastCharCode === 45 ||\n                // Check that the previous label does not end with a '_' (underscore)\n                lastCharCode === 95) {\n                return false;\n            }\n            lastDotIndex = i;\n        }\n        else if (!( /*@__INLINE__*/(isValidAscii(code) || code === 45 || code === 95))) {\n            // Check if there is a forbidden character in the label\n            return false;\n        }\n        lastCharCode = code;\n    }\n    return (\n    // Check that last label is shorter than 63 chars\n    len - lastDotIndex - 1 <= 63 &&\n        // Check that the last character is an allowed trailing label character.\n        // Since we already checked that the char is a valid hostname character,\n        // we only need to check that it's different from '-'.\n        lastCharCode !== 45);\n}\n//# sourceMappingURL=is-valid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtdmFsaWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBZSxvQ0FBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9pcy12YWxpZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEltcGxlbWVudHMgZmFzdCBzaGFsbG93IHZlcmlmaWNhdGlvbiBvZiBob3N0bmFtZXMuIFRoaXMgZG9lcyBub3QgcGVyZm9ybSBhXG4gKiBzdHJ1Y3QgY2hlY2sgb24gdGhlIGNvbnRlbnQgb2YgbGFiZWxzIChjbGFzc2VzIG9mIFVuaWNvZGUgY2hhcmFjdGVycywgZXRjLilcbiAqIGJ1dCBpbnN0ZWFkIGNoZWNrIHRoYXQgdGhlIHN0cnVjdHVyZSBpcyB2YWxpZCAobnVtYmVyIG9mIGxhYmVscywgbGVuZ3RoIG9mXG4gKiBsYWJlbHMsIGV0Yy4pLlxuICpcbiAqIElmIHlvdSBuZWVkIHN0cmljdGVyIHZhbGlkYXRpb24sIGNvbnNpZGVyIHVzaW5nIGFuIGV4dGVybmFsIGxpYnJhcnkuXG4gKi9cbmZ1bmN0aW9uIGlzVmFsaWRBc2NpaShjb2RlKSB7XG4gICAgcmV0dXJuICgoY29kZSA+PSA5NyAmJiBjb2RlIDw9IDEyMikgfHwgKGNvZGUgPj0gNDggJiYgY29kZSA8PSA1NykgfHwgY29kZSA+IDEyNyk7XG59XG4vKipcbiAqIENoZWNrIGlmIGEgaG9zdG5hbWUgc3RyaW5nIGlzIHZhbGlkLiBJdCdzIHVzdWFsbHkgYSBwcmVsaW1pbmFyeSBjaGVjayBiZWZvcmVcbiAqIHRyeWluZyB0byB1c2UgZ2V0RG9tYWluIG9yIGFueXRoaW5nIGVsc2UuXG4gKlxuICogQmV3YXJlOiBpdCBkb2VzIG5vdCBjaGVjayBpZiB0aGUgVExEIGV4aXN0cy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGhvc3RuYW1lKSB7XG4gICAgaWYgKGhvc3RuYW1lLmxlbmd0aCA+IDI1NSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoXG4gICAgLypAX19JTkxJTkVfXyovICFpc1ZhbGlkQXNjaWkoaG9zdG5hbWUuY2hhckNvZGVBdCgwKSkgJiZcbiAgICAgICAgaG9zdG5hbWUuY2hhckNvZGVBdCgwKSAhPT0gNDYgJiYgLy8gJy4nIChkb3QpXG4gICAgICAgIGhvc3RuYW1lLmNoYXJDb2RlQXQoMCkgIT09IDk1IC8vICdfJyAodW5kZXJzY29yZSlcbiAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBWYWxpZGF0ZSBob3N0bmFtZSBhY2NvcmRpbmcgdG8gUkZDXG4gICAgbGV0IGxhc3REb3RJbmRleCA9IC0xO1xuICAgIGxldCBsYXN0Q2hhckNvZGUgPSAtMTtcbiAgICBjb25zdCBsZW4gPSBob3N0bmFtZS5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBjb2RlID0gaG9zdG5hbWUuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGNvZGUgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgLy8gQ2hlY2sgdGhhdCBwcmV2aW91cyBsYWJlbCBpcyA8IDYzIGJ5dGVzIGxvbmcgKDY0ID0gNjMgKyAnLicpXG4gICAgICAgICAgICBpIC0gbGFzdERvdEluZGV4ID4gNjQgfHxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayB0aGF0IHByZXZpb3VzIGNoYXJhY3RlciB3YXMgbm90IGFscmVhZHkgYSAnLidcbiAgICAgICAgICAgICAgICBsYXN0Q2hhckNvZGUgPT09IDQ2IHx8XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgdGhhdCB0aGUgcHJldmlvdXMgbGFiZWwgZG9lcyBub3QgZW5kIHdpdGggYSAnLScgKGRhc2gpXG4gICAgICAgICAgICAgICAgbGFzdENoYXJDb2RlID09PSA0NSB8fFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIHRoYXQgdGhlIHByZXZpb3VzIGxhYmVsIGRvZXMgbm90IGVuZCB3aXRoIGEgJ18nICh1bmRlcnNjb3JlKVxuICAgICAgICAgICAgICAgIGxhc3RDaGFyQ29kZSA9PT0gOTUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsYXN0RG90SW5kZXggPSBpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCEoIC8qQF9fSU5MSU5FX18qLyhpc1ZhbGlkQXNjaWkoY29kZSkgfHwgY29kZSA9PT0gNDUgfHwgY29kZSA9PT0gOTUpKSkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlcmUgaXMgYSBmb3JiaWRkZW4gY2hhcmFjdGVyIGluIHRoZSBsYWJlbFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGxhc3RDaGFyQ29kZSA9IGNvZGU7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgLy8gQ2hlY2sgdGhhdCBsYXN0IGxhYmVsIGlzIHNob3J0ZXIgdGhhbiA2MyBjaGFyc1xuICAgIGxlbiAtIGxhc3REb3RJbmRleCAtIDEgPD0gNjMgJiZcbiAgICAgICAgLy8gQ2hlY2sgdGhhdCB0aGUgbGFzdCBjaGFyYWN0ZXIgaXMgYW4gYWxsb3dlZCB0cmFpbGluZyBsYWJlbCBjaGFyYWN0ZXIuXG4gICAgICAgIC8vIFNpbmNlIHdlIGFscmVhZHkgY2hlY2tlZCB0aGF0IHRoZSBjaGFyIGlzIGEgdmFsaWQgaG9zdG5hbWUgY2hhcmFjdGVyLFxuICAgICAgICAvLyB3ZSBvbmx5IG5lZWQgdG8gY2hlY2sgdGhhdCBpdCdzIGRpZmZlcmVudCBmcm9tICctJy5cbiAgICAgICAgbGFzdENoYXJDb2RlICE9PSA0NSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy12YWxpZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname, options, out) {\n    // Fast path for very popular suffixes; this allows to by-pass lookup\n    // completely as well as any extra allocation or string manipulation.\n    if (!options.allowPrivateDomains && hostname.length > 3) {\n        const last = hostname.length - 1;\n        const c3 = hostname.charCodeAt(last);\n        const c2 = hostname.charCodeAt(last - 1);\n        const c1 = hostname.charCodeAt(last - 2);\n        const c0 = hostname.charCodeAt(last - 3);\n        if (c3 === 109 /* 'm' */ &&\n            c2 === 111 /* 'o' */ &&\n            c1 === 99 /* 'c' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'com';\n            return true;\n        }\n        else if (c3 === 103 /* 'g' */ &&\n            c2 === 114 /* 'r' */ &&\n            c1 === 111 /* 'o' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'org';\n            return true;\n        }\n        else if (c3 === 117 /* 'u' */ &&\n            c2 === 100 /* 'd' */ &&\n            c1 === 101 /* 'e' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'edu';\n            return true;\n        }\n        else if (c3 === 118 /* 'v' */ &&\n            c2 === 111 /* 'o' */ &&\n            c1 === 103 /* 'g' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'gov';\n            return true;\n        }\n        else if (c3 === 116 /* 't' */ &&\n            c2 === 101 /* 'e' */ &&\n            c1 === 110 /* 'n' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'net';\n            return true;\n        }\n        else if (c3 === 101 /* 'e' */ &&\n            c2 === 100 /* 'd' */ &&\n            c1 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'de';\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=fast-path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvbG9va3VwL2Zhc3QtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNkJBQWUsb0NBQVU7QUFDekIsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9sb29rdXAvZmFzdC1wYXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChob3N0bmFtZSwgb3B0aW9ucywgb3V0KSB7XG4gICAgLy8gRmFzdCBwYXRoIGZvciB2ZXJ5IHBvcHVsYXIgc3VmZml4ZXM7IHRoaXMgYWxsb3dzIHRvIGJ5LXBhc3MgbG9va3VwXG4gICAgLy8gY29tcGxldGVseSBhcyB3ZWxsIGFzIGFueSBleHRyYSBhbGxvY2F0aW9uIG9yIHN0cmluZyBtYW5pcHVsYXRpb24uXG4gICAgaWYgKCFvcHRpb25zLmFsbG93UHJpdmF0ZURvbWFpbnMgJiYgaG9zdG5hbWUubGVuZ3RoID4gMykge1xuICAgICAgICBjb25zdCBsYXN0ID0gaG9zdG5hbWUubGVuZ3RoIC0gMTtcbiAgICAgICAgY29uc3QgYzMgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGxhc3QpO1xuICAgICAgICBjb25zdCBjMiA9IGhvc3RuYW1lLmNoYXJDb2RlQXQobGFzdCAtIDEpO1xuICAgICAgICBjb25zdCBjMSA9IGhvc3RuYW1lLmNoYXJDb2RlQXQobGFzdCAtIDIpO1xuICAgICAgICBjb25zdCBjMCA9IGhvc3RuYW1lLmNoYXJDb2RlQXQobGFzdCAtIDMpO1xuICAgICAgICBpZiAoYzMgPT09IDEwOSAvKiAnbScgKi8gJiZcbiAgICAgICAgICAgIGMyID09PSAxMTEgLyogJ28nICovICYmXG4gICAgICAgICAgICBjMSA9PT0gOTkgLyogJ2MnICovICYmXG4gICAgICAgICAgICBjMCA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBvdXQuaXNJY2FubiA9IHRydWU7XG4gICAgICAgICAgICBvdXQuaXNQcml2YXRlID0gZmFsc2U7XG4gICAgICAgICAgICBvdXQucHVibGljU3VmZml4ID0gJ2NvbSc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjMyA9PT0gMTAzIC8qICdnJyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDExNCAvKiAncicgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSAxMTEgLyogJ28nICovICYmXG4gICAgICAgICAgICBjMCA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBvdXQuaXNJY2FubiA9IHRydWU7XG4gICAgICAgICAgICBvdXQuaXNQcml2YXRlID0gZmFsc2U7XG4gICAgICAgICAgICBvdXQucHVibGljU3VmZml4ID0gJ29yZyc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjMyA9PT0gMTE3IC8qICd1JyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDEwMCAvKiAnZCcgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSAxMDEgLyogJ2UnICovICYmXG4gICAgICAgICAgICBjMCA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBvdXQuaXNJY2FubiA9IHRydWU7XG4gICAgICAgICAgICBvdXQuaXNQcml2YXRlID0gZmFsc2U7XG4gICAgICAgICAgICBvdXQucHVibGljU3VmZml4ID0gJ2VkdSc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjMyA9PT0gMTE4IC8qICd2JyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDExMSAvKiAnbycgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSAxMDMgLyogJ2cnICovICYmXG4gICAgICAgICAgICBjMCA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBvdXQuaXNJY2FubiA9IHRydWU7XG4gICAgICAgICAgICBvdXQuaXNQcml2YXRlID0gZmFsc2U7XG4gICAgICAgICAgICBvdXQucHVibGljU3VmZml4ID0gJ2dvdic7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjMyA9PT0gMTE2IC8qICd0JyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDEwMSAvKiAnZScgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSAxMTAgLyogJ24nICovICYmXG4gICAgICAgICAgICBjMCA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBvdXQuaXNJY2FubiA9IHRydWU7XG4gICAgICAgICAgICBvdXQuaXNQcml2YXRlID0gZmFsc2U7XG4gICAgICAgICAgICBvdXQucHVibGljU3VmZml4ID0gJ25ldCc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjMyA9PT0gMTAxIC8qICdlJyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDEwMCAvKiAnZCcgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnZGUnO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmFzdC1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/options.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/options.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDefaults: () => (/* binding */ setDefaults)\n/* harmony export */ });\nfunction setDefaultsImpl({ allowIcannDomains = true, allowPrivateDomains = false, detectIp = true, extractHostname = true, mixedInputs = true, validHosts = null, validateHostname = true, }) {\n    return {\n        allowIcannDomains,\n        allowPrivateDomains,\n        detectIp,\n        extractHostname,\n        mixedInputs,\n        validHosts,\n        validateHostname,\n    };\n}\nconst DEFAULT_OPTIONS = /*@__INLINE__*/ setDefaultsImpl({});\nfunction setDefaults(options) {\n    if (options === undefined) {\n        return DEFAULT_OPTIONS;\n    }\n    return /*@__INLINE__*/ setDefaultsImpl(options);\n}\n//# sourceMappingURL=options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMkJBQTJCLGlLQUFpSztBQUM1TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRDtBQUNuRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL21hbm55aWx1cGVqdS9yZXZlaWxsZXJzdHVkaW9zLXdlYnNpdGUvcmV2ZWlsbGVyc3R1ZGlvcy9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvb3B0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzZXREZWZhdWx0c0ltcGwoeyBhbGxvd0ljYW5uRG9tYWlucyA9IHRydWUsIGFsbG93UHJpdmF0ZURvbWFpbnMgPSBmYWxzZSwgZGV0ZWN0SXAgPSB0cnVlLCBleHRyYWN0SG9zdG5hbWUgPSB0cnVlLCBtaXhlZElucHV0cyA9IHRydWUsIHZhbGlkSG9zdHMgPSBudWxsLCB2YWxpZGF0ZUhvc3RuYW1lID0gdHJ1ZSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFsbG93SWNhbm5Eb21haW5zLFxuICAgICAgICBhbGxvd1ByaXZhdGVEb21haW5zLFxuICAgICAgICBkZXRlY3RJcCxcbiAgICAgICAgZXh0cmFjdEhvc3RuYW1lLFxuICAgICAgICBtaXhlZElucHV0cyxcbiAgICAgICAgdmFsaWRIb3N0cyxcbiAgICAgICAgdmFsaWRhdGVIb3N0bmFtZSxcbiAgICB9O1xufVxuY29uc3QgREVGQVVMVF9PUFRJT05TID0gLypAX19JTkxJTkVfXyovIHNldERlZmF1bHRzSW1wbCh7fSk7XG5leHBvcnQgZnVuY3Rpb24gc2V0RGVmYXVsdHMob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIERFRkFVTFRfT1BUSU9OUztcbiAgICB9XG4gICAgcmV0dXJuIC8qQF9fSU5MSU5FX18qLyBzZXREZWZhdWx0c0ltcGwob3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js":
/*!***********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/subdomain.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getSubdomain)\n/* harmony export */ });\n/**\n * Returns the subdomain of a hostname string\n */\nfunction getSubdomain(hostname, domain) {\n    // If `hostname` and `domain` are the same, then there is no sub-domain\n    if (domain.length === hostname.length) {\n        return '';\n    }\n    return hostname.slice(0, -domain.length - 1);\n}\n//# sourceMappingURL=subdomain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvc3ViZG9tYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFubnlpbHVwZWp1L3JldmVpbGxlcnN0dWRpb3Mtd2Vic2l0ZS9yZXZlaWxsZXJzdHVkaW9zL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9zdWJkb21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIHRoZSBzdWJkb21haW4gb2YgYSBob3N0bmFtZSBzdHJpbmdcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U3ViZG9tYWluKGhvc3RuYW1lLCBkb21haW4pIHtcbiAgICAvLyBJZiBgaG9zdG5hbWVgIGFuZCBgZG9tYWluYCBhcmUgdGhlIHNhbWUsIHRoZW4gdGhlcmUgaXMgbm8gc3ViLWRvbWFpblxuICAgIGlmIChkb21haW4ubGVuZ3RoID09PSBob3N0bmFtZS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gaG9zdG5hbWUuc2xpY2UoMCwgLWRvbWFpbi5sZW5ndGggLSAxKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YmRvbWFpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js\n");

/***/ })

};
;